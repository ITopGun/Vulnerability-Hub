#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import motor.motor_asyncio
from fastapi_users import FastAPIUsers, models
from fastapi_users.db import MongoDBUserDatabase
from fastapi_users.authentication import JWTAuthentication

# --- MongoDB Setup -----------------------------------------------------------

# MongoDB Configurations
DATABASE_URL = "mongodb://localhost:27017"
client = motor.motor_asyncio.AsyncIOMotorClient(
    DATABASE_URL, uuidRepresentation="standard"
)
database = client["vulnerability_db"]

# MongoDB users collection instance ("users" by default, can be changed)
collection = database["users"]


# --- Users Collection Schema Setup -------------------------------------------

# Pydantic models for MongoDB "User" collection schema
# Learn more at https://frankie567.github.io/fastapi-users/configuration/model/

class User(models.BaseUser):
    firstName: str
    lastName: str


class UserCreate(models.BaseUserCreate):
    firstName: str
    lastName: str


class UserUpdate(User, models.BaseUserUpdate):
    pass


class UserDB(User, models.BaseUserDB):
    pass

# --- Authentication Method Setup ---------------------------------------------


# Secret Key (must be changed from "SECRET")
SECRET = "SECRET"

# Authentication Method JWT
auth_backends = []
authentication = JWTAuthentication(secret=SECRET, lifetime_seconds=3600)
auth_backends.append(authentication)


# --- FastAPIUsers Object Declaration -----------------------------------------

# MongoDB "users" collection adaptor for API calls
user_db = MongoDBUserDatabase(UserDB, collection)

# FastAPI Users helper class with all the configurations from above
# It provides us all the routes
fastapi_users = FastAPIUsers(
    user_db,
    auth_backends,
    User,
    UserCreate,
    UserUpdate,
    UserDB
)
